import os.path

#env = Environment(CPPPATH=[libnumth_path, '/usr/include/qt3'],
#                  CCFLAGS=['-g'],
#                  LIBS=['numth','qt-mt', 'pthread', 'm', 'X11', 'Xext','qttestrunner' ],
#                  LIBPATH=[libnumth_path])
#
Import('myenv')

def CheckCppunit(context):
  context.Message('Checking for Cppunit... ')
  ret = context.TryAction( Action('cppunit-config --libs') )
  context.Result(ret[0])
  return ret[0]

if not myenv.GetOption('clean'):
  conf = Configure(myenv, log_file=myenv['CONFIG_LOG'], custom_tests = {'CheckCppunit':CheckCppunit} )
  if not conf.CheckCppunit():
    print 'Cppunit is not installed. Exiting...'
    Exit(1)
  myenv = conf.Finish()


myenv.ParseConfig('cppunit-config --libs')

files = Split("""
    ZTest.cpp
    KernelTest.cpp
    main.cpp
    """)


cppunitTests = myenv.Program('unitTests', files)
myenv.Install(myenv['INSTALL_DIR_TESTS'], cppunitTests)
Alias('tests', cppunitTests)
#Alias('tests', myenv['INSTALL_DIR_TESTS'])
Alias('all', cppunitTests)
Alias('install', myenv['INSTALL_DIR_TESTS'])
